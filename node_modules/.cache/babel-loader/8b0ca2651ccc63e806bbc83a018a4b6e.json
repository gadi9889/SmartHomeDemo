{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gadi\\\\Desktop\\\\React\\\\smarthome\\\\src\\\\components\\\\Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CreateProducts from './CreateProducts';\nimport Product from './Product';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(props) {\n  _s();\n\n  let flag = true;\n  const [addProduct, setAddProduct] = useState();\n  const [render, setRender] = useState();\n\n  const addDirect = () => {\n    let heater;\n\n    let stereoOp = /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"stereo\",\n      id: \"stereo\",\n      children: \"Stereo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 24\n    }, this);\n\n    props.stereos.forEach(stereo => {\n      if (stereo != '') {\n        if (stereo.name.indexOf(props.name) != -1) {\n          stereoOp = '';\n        }\n      }\n    });\n\n    if (props.type == \"bathroom\") {\n      heater = /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"heater\",\n        id: \"heater\",\n        children: \"heater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (props.items == 5) {\n      window.alert(\"Reached the limit\");\n    } else if (flag == true) {\n      setAddProduct( /*#__PURE__*/_jsxDEV(CreateProducts, {\n        name: props.name,\n        addDirect: addDirect,\n        addProductsFunc: props.addProductsFunc,\n        items: props.items,\n        heater: heater,\n        stereo: stereoOp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 27\n      }, this));\n      flag = false;\n    } else {\n      flag = true;\n      setAddProduct();\n    }\n  };\n\n  const colorSet = status => {\n    if (status) {\n      return 'green';\n    } else {\n      return 'red';\n    }\n  };\n\n  const update = i => {\n    setRender(i);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: props.color\n      },\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"product-grid\",\n      children: [props.airCons.map(airCon => {\n        if (airCon == '') {\n          return;\n        }\n\n        if (airCon.name.indexOf(props.name) != -1) {\n          return /*#__PURE__*/_jsxDEV(Product, {\n            update: update,\n            status: airCon.status,\n            color: colorSet(airCon.status),\n            name: airCon.name,\n            displayName: airCon.name.substring(0, 6),\n            power: props.airConPower\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 28\n          }, this);\n        }\n      }), props.heaters.map(heater => {\n        if (heater == '') {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Product, {\n          update: update,\n          status: heater.status,\n          color: colorSet(heater.status),\n          name: heater.name,\n          displayName: heater.name.substring(0, 6),\n          power: props.heaterPower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this);\n      }), props.lights.map(light => {\n        if (light == '') {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Product, {\n          update: update,\n          status: light.status,\n          color: colorSet(light.status),\n          name: light.name,\n          displayName: light.name.substring(0, 5),\n          power: props.lightPower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }, this);\n      }), props.stereos.map(stereo => {\n        if (stereo == '') {\n          return;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Product, {\n          update: update,\n          status: stereo.status,\n          color: colorSet(stereo.status),\n          name: stereo.name,\n          displayName: stereo.name.substring(0, 6),\n          power: props.stereoPower\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 24\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDirect,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), addProduct]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"BpxlxeBkmx9xozX7AAltjdi26Tc=\");\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Gadi/Desktop/React/smarthome/src/components/Room.jsx"],"names":["React","CreateProducts","Product","useState","Room","props","flag","addProduct","setAddProduct","render","setRender","addDirect","heater","stereoOp","stereos","forEach","stereo","name","indexOf","type","items","window","alert","addProductsFunc","colorSet","status","update","i","color","airCons","map","airCon","substring","airConPower","heaters","heaterPower","lights","light","lightPower","stereoPower"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport CreateProducts from './CreateProducts';\r\nimport Product from './Product';\r\nimport { useState } from 'react';\r\n\r\nexport default function Room(props) {\r\n    let flag = true;\r\n\r\n    const [addProduct, setAddProduct] = useState()\r\n    const [render, setRender] = useState()\r\n\r\n    const addDirect = () => {\r\n        let heater;\r\n        let stereoOp = <option value=\"stereo\" id=\"stereo\">Stereo</option>;\r\n        props.stereos.forEach(stereo => {\r\n            if (stereo != '') {\r\n                if (stereo.name.indexOf(props.name) != -1) {\r\n                    stereoOp = '';\r\n                }\r\n            }\r\n        });\r\n        if (props.type == \"bathroom\") {\r\n            heater=<option value=\"heater\" id=\"heater\">heater</option>;\r\n        }\r\n        if (props.items == 5) {\r\n            window.alert(\"Reached the limit\")\r\n        }\r\n        else if (flag == true) {\r\n            setAddProduct(<CreateProducts name={props.name} addDirect={addDirect} addProductsFunc={props.addProductsFunc} items={props.items} heater={heater} stereo={stereoOp}/>)\r\n            flag = false;\r\n        }\r\n        else {\r\n            flag = true;\r\n            setAddProduct();\r\n        }\r\n    }\r\n\r\n    const colorSet = (status) => {\r\n        if (status) {\r\n            return 'green'\r\n        }\r\n        else {\r\n            return 'red'\r\n        }\r\n    }\r\n\r\n    const update = (i) => {\r\n        setRender(i)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{color:props.color}}>{props.name}</h3>\r\n            <h4>{props.type}</h4>\r\n            <div id=\"product-grid\">\r\n            {props.airCons.map((airCon) => {\r\n                if (airCon == '') {\r\n                    return\r\n                }\r\n                if (airCon.name.indexOf(props.name) != -1) {\r\n                    return <Product update={update} status={airCon.status} color={colorSet(airCon.status)} name={airCon.name} displayName={airCon.name.substring(0,6)} power={props.airConPower}/>\r\n                }\r\n            })\r\n            }\r\n            {props.heaters.map((heater) => {\r\n                if (heater == '') {\r\n                    return\r\n                }\r\n                return <Product update={update} status={heater.status} color={colorSet(heater.status)} name={heater.name} displayName={heater.name.substring(0,6)} power={props.heaterPower}/>\r\n            })\r\n            }\r\n            {props.lights.map((light) => {\r\n                if (light == '') {\r\n                    return\r\n                }\r\n                return <Product update={update} status={light.status} color={colorSet(light.status)} name={light.name} displayName={light.name.substring(0,5)} power={props.lightPower}/>\r\n            })\r\n            }\r\n            {props.stereos.map((stereo) => {\r\n                if (stereo == '') {\r\n                    return\r\n                }\r\n                return <Product update={update} status={stereo.status} color={colorSet(stereo.status)} name={stereo.name} displayName={stereo.name.substring(0,6)} power={props.stereoPower}/>\r\n            })\r\n            }\r\n            </div>\r\n            <button onClick={addDirect}>+</button>\r\n            {addProduct}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}