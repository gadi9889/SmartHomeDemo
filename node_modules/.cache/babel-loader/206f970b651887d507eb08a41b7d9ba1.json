{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gadi\\\\Desktop\\\\React\\\\smarthome\\\\src\\\\components\\\\Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CreateProducts from './CreateProducts';\nimport Product from './Product';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(props) {\n  _s();\n\n  let flag = true;\n  const [addProduct, setAddProduct] = useState();\n  const [render, setRender] = useState();\n\n  const addDirect = () => {\n    let heaterOp;\n\n    let stereoOp = /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"stereo\",\n      id: \"stereo\",\n      children: \"Stereo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 24\n    }, this);\n\n    props.stereos.forEach(stereo => {\n      if (stereo != '') {\n        console.log(stereo.name);\n\n        if (stereo.name.indexOf(props.roomName) != -1) {\n          stereoOp = '';\n        }\n      }\n    });\n\n    if (props.roomType == \"bathroom\") {\n      heaterOp = /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"heater\",\n        id: \"heater\",\n        children: \"heater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 22\n      }, this);\n    }\n\n    if (props.roomItems == 5) {\n      window.alert(\"Reached the limit\");\n    } else if (flag == true) {\n      setAddProduct( /*#__PURE__*/_jsxDEV(CreateProducts, {\n        roomIndex: props.roomIndex,\n        addDirect: addDirect,\n        addProductsFunc: props.addProductsFunc,\n        items: props.roomItems,\n        heater: heaterOp,\n        stereo: stereoOp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 27\n      }, this));\n      flag = false;\n    } else {\n      flag = true;\n      setAddProduct();\n    }\n  };\n\n  const isStereoInRoom = () => {};\n\n  const colorSet = status => {\n    if (status) {\n      return 'green';\n    } else {\n      return 'red';\n    }\n  };\n\n  const update = i => {\n    setRender(i);\n  };\n\n  const checkProductInRoom = (roomIndex, product, productPower, productName) => {\n    if (product == '') {\n      return;\n    }\n\n    if (roomIndex == product.roomIndex) {\n      return /*#__PURE__*/_jsxDEV(Product, {\n        update: update,\n        status: product.status,\n        color: colorSet(product.status),\n        index: product.index,\n        displayName: productName,\n        power: productPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: props.roomColor\n      },\n      children: props.roomName.substring(0, props.roomName.indexOf('-'))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.roomType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"product-grid\",\n      children: [props.airCons.map(airCon => checkProductInRoom(props.roomIndex, airCon, props.airConPower, \"AC\")), props.heaters.map(heater => checkProductInRoom(props.roomIndex, heater, props.heaterPower, \"Heater\")), props.lights.map(light => checkProductInRoom(props.roomIndex, light, props.lightPower, \"Light\")), props.stereos.map(stereo => checkProductInRoom(props.roomIndex, stereo, props.stereoPower, \"Stereo\"))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDirect,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), addProduct]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"BpxlxeBkmx9xozX7AAltjdi26Tc=\");\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Gadi/Desktop/React/smarthome/src/components/Room.jsx"],"names":["React","CreateProducts","Product","useState","Room","props","flag","addProduct","setAddProduct","render","setRender","addDirect","heaterOp","stereoOp","stereos","forEach","stereo","console","log","name","indexOf","roomName","roomType","roomItems","window","alert","roomIndex","addProductsFunc","isStereoInRoom","colorSet","status","update","i","checkProductInRoom","product","productPower","productName","index","color","roomColor","substring","airCons","map","airCon","airConPower","heaters","heater","heaterPower","lights","light","lightPower","stereoPower"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,MAAIC,IAAI,GAAG,IAAX;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,EAA5C;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;;AAEA,QAAMQ,SAAS,GAAG,MAAM;AACpB,QAAIC,QAAJ;;AACA,QAAIC,QAAQ,gBAAG;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,EAAE,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;;AACAR,IAAAA,KAAK,CAACS,OAAN,CAAcC,OAAd,CAAsBC,MAAM,IAAI;AAC5B,UAAIA,MAAM,IAAI,EAAd,EAAkB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AACA,YAAIH,MAAM,CAACG,IAAP,CAAYC,OAAZ,CAAoBf,KAAK,CAACgB,QAA1B,KAAuC,CAAC,CAA5C,EAA+C;AAC3CR,UAAAA,QAAQ,GAAG,EAAX;AACH;AACJ;AACJ,KAPD;;AAQA,QAAIR,KAAK,CAACiB,QAAN,IAAkB,UAAtB,EAAkC;AAC9BV,MAAAA,QAAQ,gBAAC;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,EAAE,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAT;AACH;;AACD,QAAIP,KAAK,CAACkB,SAAN,IAAmB,CAAvB,EAA0B;AACtBC,MAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AACH,KAFD,MAGK,IAAInB,IAAI,IAAI,IAAZ,EAAkB;AACnBE,MAAAA,aAAa,eAAC,QAAC,cAAD;AACV,QAAA,SAAS,EAAEH,KAAK,CAACqB,SADP;AAEV,QAAA,SAAS,EAAEf,SAFD;AAGV,QAAA,eAAe,EAAEN,KAAK,CAACsB,eAHb;AAIV,QAAA,KAAK,EAAEtB,KAAK,CAACkB,SAJH;AAKV,QAAA,MAAM,EAAEX,QALE;AAMV,QAAA,MAAM,EAAEC;AANE;AAAA;AAAA;AAAA;AAAA,cAAD,CAAb;AASAP,MAAAA,IAAI,GAAG,KAAP;AACH,KAXI,MAYA;AACDA,MAAAA,IAAI,GAAG,IAAP;AACAE,MAAAA,aAAa;AAChB;AACJ,GAjCD;;AAmCA,QAAMoB,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAIA,QAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAIA,MAAJ,EAAY;AACR,aAAO,OAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ,GAPD;;AASA,QAAMC,MAAM,GAAIC,CAAD,IAAO;AAClBtB,IAAAA,SAAS,CAACsB,CAAD,CAAT;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,CAACP,SAAD,EAAWQ,OAAX,EAAmBC,YAAnB,EAAgCC,WAAhC,KAAgD;AACvE,QAAIF,OAAO,IAAI,EAAf,EAAmB;AACf;AACH;;AACD,QAAIR,SAAS,IAAIQ,OAAO,CAACR,SAAzB,EAAoC;AAChC,0BAAO,QAAC,OAAD;AACH,QAAA,MAAM,EAAEK,MADL;AAEH,QAAA,MAAM,EAAEG,OAAO,CAACJ,MAFb;AAGH,QAAA,KAAK,EAAED,QAAQ,CAACK,OAAO,CAACJ,MAAT,CAHZ;AAIH,QAAA,KAAK,EAAEI,OAAO,CAACG,KAJZ;AAKH,QAAA,WAAW,EAAED,WALV;AAMH,QAAA,KAAK,EAAED;AANJ;AAAA;AAAA;AAAA;AAAA,cAAP;AAQH;AACJ,GAdD;;AAgBA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACG,QAAAA,KAAK,EAACjC,KAAK,CAACkC;AAAb,OAAX;AAAA,gBAAqClC,KAAK,CAACgB,QAAN,CAAemB,SAAf,CAAyB,CAAzB,EAA2BnC,KAAK,CAACgB,QAAN,CAAeD,OAAf,CAAuB,GAAvB,CAA3B;AAArC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKf,KAAK,CAACiB;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA,iBACKjB,KAAK,CAACoC,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAYV,kBAAkB,CAAC5B,KAAK,CAACqB,SAAP,EAAiBiB,MAAjB,EAAwBtC,KAAK,CAACuC,WAA9B,EAA0C,IAA1C,CAAhD,CADL,EAGKvC,KAAK,CAACwC,OAAN,CAAcH,GAAd,CAAmBI,MAAD,IAAYb,kBAAkB,CAAC5B,KAAK,CAACqB,SAAP,EAAiBoB,MAAjB,EAAwBzC,KAAK,CAAC0C,WAA9B,EAA0C,QAA1C,CAAhD,CAHL,EAKK1C,KAAK,CAAC2C,MAAN,CAAaN,GAAb,CAAkBO,KAAD,IAAWhB,kBAAkB,CAAC5B,KAAK,CAACqB,SAAP,EAAiBuB,KAAjB,EAAuB5C,KAAK,CAAC6C,UAA7B,EAAwC,OAAxC,CAA9C,CALL,EAOK7C,KAAK,CAACS,OAAN,CAAc4B,GAAd,CAAmB1B,MAAD,IAAYiB,kBAAkB,CAAC5B,KAAK,CAACqB,SAAP,EAAiBV,MAAjB,EAAwBX,KAAK,CAAC8C,WAA9B,EAA0C,QAA1C,CAAhD,CAPL;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAcI;AAAQ,MAAA,OAAO,EAAExC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ,EAeKJ,UAfL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GA7FuBH,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport CreateProducts from './CreateProducts';\r\nimport Product from './Product';\r\nimport { useState } from 'react';\r\n\r\nexport default function Room(props) {\r\n    let flag = true;\r\n\r\n    const [addProduct, setAddProduct] = useState()\r\n    const [render, setRender] = useState()\r\n\r\n    const addDirect = () => {\r\n        let heaterOp;\r\n        let stereoOp = <option value=\"stereo\" id=\"stereo\">Stereo</option>;\r\n        props.stereos.forEach(stereo => {\r\n            if (stereo != '') {\r\n                console.log(stereo.name)\r\n                if (stereo.name.indexOf(props.roomName) != -1) {\r\n                    stereoOp = '';\r\n                }\r\n            }\r\n        });\r\n        if (props.roomType == \"bathroom\") {\r\n            heaterOp=<option value=\"heater\" id=\"heater\">heater</option>;\r\n        }\r\n        if (props.roomItems == 5) {\r\n            window.alert(\"Reached the limit\")\r\n        }\r\n        else if (flag == true) {\r\n            setAddProduct(<CreateProducts \r\n                roomIndex={props.roomIndex} \r\n                addDirect={addDirect} \r\n                addProductsFunc={props.addProductsFunc} \r\n                items={props.roomItems} \r\n                heater={heaterOp} \r\n                stereo={stereoOp}\r\n                />\r\n            )\r\n            flag = false;\r\n        }\r\n        else {\r\n            flag = true;\r\n            setAddProduct();\r\n        }\r\n    }\r\n\r\n    const isStereoInRoom = () => {\r\n\r\n    }\r\n\r\n    const colorSet = (status) => {\r\n        if (status) {\r\n            return 'green'\r\n        }\r\n        else {\r\n            return 'red'\r\n        }\r\n    }\r\n\r\n    const update = (i) => {\r\n        setRender(i)\r\n    }\r\n\r\n    const checkProductInRoom = (roomIndex,product,productPower,productName) => {\r\n        if (product == '') {\r\n            return\r\n        }\r\n        if (roomIndex == product.roomIndex) {\r\n            return <Product \r\n                update={update} \r\n                status={product.status} \r\n                color={colorSet(product.status)} \r\n                index={product.index} \r\n                displayName={productName} \r\n                power={productPower}\r\n                />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{color:props.roomColor}}>{props.roomName.substring(0,props.roomName.indexOf('-'))}</h3>\r\n            <h4>{props.roomType}</h4>\r\n\r\n            <div id=\"product-grid\">\r\n                {props.airCons.map((airCon) => checkProductInRoom(props.roomIndex,airCon,props.airConPower,\"AC\"))}\r\n\r\n                {props.heaters.map((heater) => checkProductInRoom(props.roomIndex,heater,props.heaterPower,\"Heater\"))}\r\n\r\n                {props.lights.map((light) => checkProductInRoom(props.roomIndex,light,props.lightPower,\"Light\"))}\r\n\r\n                {props.stereos.map((stereo) => checkProductInRoom(props.roomIndex,stereo,props.stereoPower,\"Stereo\"))}\r\n            </div>\r\n            \r\n            <button onClick={addDirect}>+</button>\r\n            {addProduct}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}