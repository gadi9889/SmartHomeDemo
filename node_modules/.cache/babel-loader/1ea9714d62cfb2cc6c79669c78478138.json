{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gadi\\\\Desktop\\\\React\\\\smarthome\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport CreateRoom from './components/CreateRoom';\nimport Room from './components/Room';\nimport { useState } from 'react';\nimport { type } from '@testing-library/user-event/dist/type';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [rooms, setRooms] = useState([]);\n  const [airCons, setAirCons] = useState(['']);\n  const [heaters, setHeaters] = useState(['']);\n  const [lights, setLights] = useState(['']);\n  const [stereos, setStereos] = useState(['']);\n\n  const createroom = (name, type, color) => {\n    if (rooms.length != 0) {\n      setRooms([...rooms, {\n        name: name,\n        index: rooms.length,\n        type: type,\n        color: color,\n        items: 0\n      }]);\n    } else {\n      setRooms([{\n        name: name,\n        index: rooms.length,\n        type: type,\n        color: color,\n        items: 0\n      }]);\n    }\n  };\n\n  const updateItems = roomIndex => {\n    for (let i = 0; i < rooms.length; i++) {\n      if (rooms[i].index == roomIndex) {\n        rooms[i].items += 1;\n        break;\n      }\n    }\n  };\n\n  const productPush = (productArray, roomIndex) => {\n    productArray.push({\n      index: productArray.length,\n      roomIndex: roomIndex,\n      status: false\n    });\n  };\n\n  const addProducts = (roomIndex, product) => {\n    if (product == 'ac') {\n      airConPush(roomIndex);\n    } else if (product == 'heater') {\n      heaterPush(roomIndex);\n    } else if (product == 'light') {\n      lightPush(roomIndex);\n    } else if (product == 'stereo') {\n      stereoPush(roomIndex);\n    }\n\n    updateItems(roomIndex);\n  };\n\n  const airConPush = roomIndex => {\n    productPush(airCons, roomIndex);\n    setAirCons([...airCons]);\n  };\n\n  const heaterPush = roomIndex => {\n    productPush(heaters, roomIndex);\n    setHeaters([...heaters]);\n  };\n\n  const stereoPush = roomIndex => {\n    productPush(stereos, roomIndex);\n    setStereos([...stereos]);\n  };\n\n  const lightPush = roomIndex => {\n    productPush(lights, roomIndex);\n    setLights([...lights]);\n  };\n\n  const airConPower = airConIndex => {\n    airCons.forEach(airCon => {\n      if (airCon.index == airConIndex) {\n        airCon.status = !airCon.status;\n        setAirCons(airCons);\n      }\n    });\n  };\n\n  const heaterPower = heaterIndex => {\n    heaters.forEach(heater => {\n      if (heater.index == heaterIndex) {\n        heater.status = !heater.status;\n        setHeaters(heaters);\n      }\n    });\n  };\n\n  const lightPower = lightIndex => {\n    lights.forEach(light => {\n      if (light.index == lightIndex) {\n        light.status = !light.status;\n        setLights(lights);\n      }\n    });\n  };\n\n  const stereoPower = stereoIndex => {\n    stereos.forEach(stereo => {\n      if (stereo.index == stereoIndex) {\n        stereo.status = !stereo.status;\n        setStereos(stereos);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      children: [rooms.map(room => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            backgroundColor: room.color\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/room/' + room.name,\n            children: room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 18\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/CreateRoom\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/CreateRoom\",\n          element: /*#__PURE__*/_jsxDEV(CreateRoom, {\n            createRoomFunc: createroom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), rooms.map(room => {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: '/room/' + room.name,\n            element: /*#__PURE__*/_jsxDEV(Room, {\n              roomName: room.name,\n              roomIndex: room.index,\n              roomType: room.type,\n              roomColor: room.color,\n              roomItems: room.items,\n              airCons: airCons,\n              heaters: heaters,\n              lights: lights,\n              stereos: stereos,\n              addProductsFunc: addProducts,\n              stereoPower: stereoPower,\n              lightPower: lightPower,\n              heaterPower: heaterPower,\n              airConPower: airConPower\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8WlZ66kUcKQgcqEJfZ8/CGM1O2o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Gadi/Desktop/React/smarthome/src/App.js"],"names":["BrowserRouter","Router","Routes","Route","Link","CreateRoom","Room","useState","type","App","rooms","setRooms","airCons","setAirCons","heaters","setHeaters","lights","setLights","stereos","setStereos","createroom","name","color","length","index","items","updateItems","roomIndex","i","productPush","productArray","push","status","addProducts","product","airConPush","heaterPush","lightPush","stereoPush","airConPower","airConIndex","forEach","airCon","heaterPower","heaterIndex","heater","lightPower","lightIndex","light","stereoPower","stereoIndex","stereo","map","room","backgroundColor"],"mappings":"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","sourcesContent":["import './App.css';\nimport {BrowserRouter as Router, Routes, Route, Link} from 'react-router-dom';\nimport CreateRoom from './components/CreateRoom';\nimport Room from './components/Room';\nimport { useState } from 'react';\nimport { type } from '@testing-library/user-event/dist/type';\n\nfunction App() {\n\n  const [rooms, setRooms] = useState([])\n  const [airCons, setAirCons] = useState([''])\n  const [heaters, setHeaters] = useState([''])\n  const [lights, setLights] = useState([''])\n  const [stereos, setStereos] = useState([''])\n\n  const createroom = (name,type,color) => {\n    if (rooms.length != 0) {\n      setRooms([...rooms,\n        {\n          name:name,\n          index:rooms.length,\n          type:type,\n          color:color,\n          items:0\n        }\n        ])\n    }\n    else {\n      setRooms([\n        {\n          name:name,\n          index:rooms.length,\n          type:type,\n          color:color,\n          items:0\n        }\n        ])\n    }\n  }\n\n  const updateItems = (roomIndex) => {\n    for (let i = 0; i < rooms.length; i++) {\n      if (rooms[i].index == roomIndex) {\n        rooms[i].items += 1;\n        break;\n      }\n    }\n  }\n\n  const productPush = (productArray,roomIndex) => {\n    productArray.push({\n      index:productArray.length,\n      roomIndex:roomIndex,\n      status:false\n    })\n  }\n\n  const addProducts = (roomIndex, product) => {\n    if (product == 'ac') {\n      airConPush(roomIndex)\n    }\n    else if (product == 'heater') {\n      heaterPush(roomIndex)\n    }\n    else if (product == 'light') {\n      lightPush(roomIndex)\n    }\n    else if (product == 'stereo') {\n      stereoPush(roomIndex)\n    }\n    updateItems(roomIndex)\n  }\n  \n  const airConPush = (roomIndex) => {\n    productPush(airCons,roomIndex);\n    setAirCons([...airCons])\n  }\n\n  const heaterPush = (roomIndex)=> {\n    productPush(heaters,roomIndex)\n    setHeaters([...heaters])\n  }\n\n  const stereoPush = (roomIndex)=> {\n    productPush(stereos,roomIndex)\n    setStereos([...stereos])\n  }\n\n  const lightPush = (roomIndex)=> {\n    productPush(lights,roomIndex)\n    setLights([...lights])\n  }\n\n\n  const airConPower = (airConIndex) => {\n    airCons.forEach(airCon => {\n      if (airCon.index == airConIndex) {\n        airCon.status = !airCon.status;\n        setAirCons(airCons)\n      }\n    });\n  }\n\n  const heaterPower = (heaterIndex) => {\n    heaters.forEach(heater => {\n      if (heater.index == heaterIndex) {\n        heater.status = !heater.status;\n        setHeaters(heaters)\n      }\n    });\n  }\n\n  const lightPower = (lightIndex) => {\n    lights.forEach(light => {\n      if (light.index == lightIndex) {\n        light.status = !light.status;\n        setLights(lights)\n      }\n    });\n  }\n  \n  const stereoPower = (stereoIndex) => {\n    stereos.forEach(stereo => {\n      if (stereo.index == stereoIndex) {\n        stereo.status = !stereo.status;\n        setStereos(stereos)\n      }\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Smart Home</h1>\n      <Router>\n        {rooms.map((room) => {\n          return <button style={{backgroundColor: room.color}}><Link to={'/room/'+room.name}>{room.name}</Link></button>\n        })}\n        <button><Link to='/CreateRoom'>+</Link></button>\n        <Routes>\n          <Route exact path='/CreateRoom' element={<CreateRoom createRoomFunc={createroom}/>} />\n          {rooms.map((room) => {\n            return <Route exact path={'/room/'+room.name} element={\n              <Room \n                roomName={room.name}\n                roomIndex={room.index}\n                roomType={room.type}\n                roomColor={room.color}\n                roomItems={room.items}\n                airCons={airCons}\n                heaters={heaters}\n                lights={lights}\n                stereos={stereos}\n                addProductsFunc={addProducts}\n                stereoPower={stereoPower}\n                lightPower={lightPower}\n                heaterPower={heaterPower}\n                airConPower={airConPower}\n              />\n            } />\n          })}\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}