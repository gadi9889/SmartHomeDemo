{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gadi\\\\Desktop\\\\React\\\\smarthome\\\\src\\\\components\\\\Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CreateProducts from './CreateProducts';\nimport Product from './Product';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(props) {\n  _s();\n\n  let flag = true;\n  const [addProduct, setAddProduct] = useState();\n  const [airConList, setAirConList] = useState([...props.airCons]);\n  const [heaterList, setHeaterList] = useState([...props.heaters]);\n  const [lightList, setLightList] = useState([...props.lights]);\n  const [stereo, setStereo] = useState([...props.stereos]);\n\n  const productRender = (productList, productRenderList, power) => {\n    let i = 0;\n\n    productList.map = product => {\n      productRenderList[i] = /*#__PURE__*/_jsxDEV(Product, {\n        status: product.status,\n        name: Product.name,\n        power: power\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 36\n      }, this);\n      i++;\n      return;\n    };\n  };\n\n  const addDirect = () => {\n    let heater = false;\n\n    let stereo = /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"stereo\",\n      id: \"stereo\",\n      children: \"Stereo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this);\n\n    if (props.type == \"bathroom\") {\n      heater = /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"heater\",\n        id: \"heater\",\n        children: \"heater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (props.items == 5) {\n      window.alert(\"Reached the limit\");\n    } else if (flag == true) {\n      setAddProduct( /*#__PURE__*/_jsxDEV(CreateProducts, {\n        name: props.name,\n        addDirect: addDirect,\n        addProductsFunc: props.addProductsFunc,\n        items: props.items,\n        heater: heater,\n        stereo: stereo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }, this));\n      flag = false;\n    } else {\n      flag = true;\n      setAddProduct();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: props.color\n      },\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), props.airCons.map(airCon => {\n      if (airCon == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: airCon.status,\n        name: airCon.name,\n        power: props.airConPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this);\n    }), props.heaters.map(heater => {\n      if (heater == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: heater.status,\n        name: heater.name,\n        power: props.heaterPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 24\n      }, this);\n    }), props.lights.map(light => {\n      if (light == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: light.status,\n        name: light.name,\n        power: props.lightPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 24\n      }, this);\n    }), props.stereos.map(stereo => {\n      if (stereo == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: stereo.status,\n        name: stereo.name,\n        power: props.stereoPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDirect,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), addProduct]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"28lxZDXgd4Q6ZRwXV1RoFOA4BJI=\");\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Gadi/Desktop/React/smarthome/src/components/Room.jsx"],"names":["React","CreateProducts","Product","useState","Room","props","flag","addProduct","setAddProduct","airConList","setAirConList","airCons","heaterList","setHeaterList","heaters","lightList","setLightList","lights","stereo","setStereo","stereos","productRender","productList","productRenderList","power","i","map","product","status","name","addDirect","heater","type","items","window","alert","addProductsFunc","color","airCon","airConPower","heaterPower","light","lightPower","stereoPower"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport CreateProducts from './CreateProducts';\r\nimport Product from './Product';\r\nimport { useState } from 'react';\r\n\r\nexport default function Room(props) {\r\n    let flag = true;\r\n\r\n    const [addProduct, setAddProduct] = useState()\r\n    const [airConList, setAirConList] = useState([...props.airCons])\r\n    const [heaterList, setHeaterList] = useState([...props.heaters])\r\n    const [lightList, setLightList] = useState([...props.lights])\r\n    const [stereo, setStereo] = useState([...props.stereos])\r\n\r\n    const productRender = (productList,productRenderList,power) => {\r\n        let i = 0;\r\n        productList.map = (product) => {\r\n            productRenderList[i] = <Product status={product.status} name={Product.name} power={power}/>\r\n            i++;\r\n            return\r\n        }\r\n    }\r\n\r\n    const addDirect = () => {\r\n        let heater = false;\r\n        let stereo = <option value=\"stereo\" id=\"stereo\">Stereo</option>;\r\n        if (props.type == \"bathroom\") {\r\n            heater=<option value=\"heater\" id=\"heater\">heater</option>;\r\n        }\r\n        if (props.items == 5) {\r\n            window.alert(\"Reached the limit\")\r\n        }\r\n        else if (flag == true) {\r\n            setAddProduct(<CreateProducts name={props.name} addDirect={addDirect} addProductsFunc={props.addProductsFunc} items={props.items} heater={heater} stereo={stereo}/>)\r\n            flag = false;\r\n        }\r\n        else {\r\n            flag = true;\r\n            setAddProduct();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{color:props.color}}>{props.name}</h3>\r\n            <h4>{props.type}</h4>\r\n            {props.airCons.map((airCon) => {\r\n                if (airCon == '') {\r\n                    return\r\n                }\r\n                return <Product status={airCon.status} name={airCon.name} power={props.airConPower}/>\r\n            })\r\n            }\r\n            {props.heaters.map((heater) => {\r\n                if (heater == '') {\r\n                    return\r\n                }\r\n                return <Product status={heater.status} name={heater.name} power={props.heaterPower}/>\r\n            })\r\n            }\r\n            {props.lights.map((light) => {\r\n                if (light == '') {\r\n                    return\r\n                }\r\n                return <Product status={light.status} name={light.name} power={props.lightPower}/>\r\n            })\r\n            }\r\n            {props.stereos.map((stereo) => {\r\n                if (stereo == '') {\r\n                    return\r\n                }\r\n                return <Product status={stereo.status} name={stereo.name} power={props.stereoPower}/>\r\n            })\r\n            }\r\n            <button onClick={addDirect}>+</button>\r\n            {addProduct}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}