{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gadi\\\\Desktop\\\\React\\\\smarthome\\\\src\\\\components\\\\Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CreateProducts from './CreateProducts';\nimport Product from './Product';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(props) {\n  _s();\n\n  let flag = true;\n  const [addProduct, setAddProduct] = useState();\n  const [airConList, setAirConList] = useState([...props.airCons]);\n  const [heaterList, setHeaterList] = useState([...props.heaters]);\n  const [lightList, setLightList] = useState([...props.lights]);\n  const [stereoList, setStereoList] = useState([...props.stereos]);\n\n  const addDirect = () => {\n    let heater = false;\n\n    let stereo = /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"stereo\",\n      id: \"stereo\",\n      children: \"Stereo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }, this);\n\n    if (props.type == \"bathroom\") {\n      heater = /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"heater\",\n        id: \"heater\",\n        children: \"heater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (props.items == 5) {\n      window.alert(\"Reached the limit\");\n    } else if (flag == true) {\n      setAddProduct( /*#__PURE__*/_jsxDEV(CreateProducts, {\n        update: updateLists,\n        name: props.name,\n        addDirect: addDirect,\n        addProductsFunc: props.addProductsFunc,\n        items: props.items,\n        heater: heater,\n        stereo: stereo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }, this));\n      flag = false;\n    } else {\n      flag = true;\n      setAddProduct();\n    }\n  };\n\n  const colorSet = status => {\n    if (status) {\n      return 'green';\n    } else {\n      return 'red';\n    }\n  };\n\n  const updateLists = () => {\n    setAirConList([...props.airCons]);\n    console.log(airCons);\n    setHeaterList([...props.heaters]);\n    setLightList([...props.lights]);\n    setStereoList([...props.stereos]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: props.color\n      },\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), airConList.map(airCon => {\n      if (airCon == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        update: updateLists,\n        status: airCon.status,\n        color: colorSet(airCon.status),\n        name: airCon.name,\n        power: props.airConPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this);\n    }), heaterList.map(heater => {\n      if (heater == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        update: updateLists,\n        status: heater.status,\n        color: colorSet(heater.status),\n        name: heater.name,\n        power: props.heaterPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 24\n      }, this);\n    }), lightList.map(light => {\n      if (light == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        update: updateLists,\n        status: light.status,\n        color: colorSet(light.status),\n        name: light.name,\n        power: props.lightPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 24\n      }, this);\n    }), stereoList.map(stereo => {\n      if (stereo == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        update: updateLists,\n        status: stereo.status,\n        color: colorSet(stereo.status),\n        name: stereo.name,\n        power: props.stereoPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDirect,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), addProduct]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"iFozzvqZMeeA5iui8X6EqhHZbl8=\");\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Gadi/Desktop/React/smarthome/src/components/Room.jsx"],"names":["React","CreateProducts","Product","useState","Room","props","flag","addProduct","setAddProduct","airConList","setAirConList","airCons","heaterList","setHeaterList","heaters","lightList","setLightList","lights","stereoList","setStereoList","stereos","addDirect","heater","stereo","type","items","window","alert","updateLists","name","addProductsFunc","colorSet","status","console","log","color","map","airCon","airConPower","heaterPower","light","lightPower","stereoPower"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAChC,MAAIC,IAAI,GAAG,IAAX;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,EAA5C;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAC,GAAGE,KAAK,CAACM,OAAV,CAAD,CAA5C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAC,GAAGE,KAAK,CAACS,OAAV,CAAD,CAA5C;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,CAAC,GAAGE,KAAK,CAACY,MAAV,CAAD,CAA1C;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,CAAC,GAAGE,KAAK,CAACe,OAAV,CAAD,CAA5C;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIC,MAAM,GAAG,KAAb;;AACA,QAAIC,MAAM,gBAAG;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAuB,MAAA,EAAE,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb;;AACA,QAAIlB,KAAK,CAACmB,IAAN,IAAc,UAAlB,EAA8B;AAC1BF,MAAAA,MAAM,gBAAC;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAuB,QAAA,EAAE,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAIjB,KAAK,CAACoB,KAAN,IAAe,CAAnB,EAAsB;AAClBC,MAAAA,MAAM,CAACC,KAAP,CAAa,mBAAb;AACH,KAFD,MAGK,IAAIrB,IAAI,IAAI,IAAZ,EAAkB;AACnBE,MAAAA,aAAa,eAAC,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEoB,WAAxB;AAAqC,QAAA,IAAI,EAAEvB,KAAK,CAACwB,IAAjD;AAAuD,QAAA,SAAS,EAAER,SAAlE;AAA6E,QAAA,eAAe,EAAEhB,KAAK,CAACyB,eAApG;AAAqH,QAAA,KAAK,EAAEzB,KAAK,CAACoB,KAAlI;AAAyI,QAAA,MAAM,EAAEH,MAAjJ;AAAyJ,QAAA,MAAM,EAAEC;AAAjK;AAAA;AAAA;AAAA;AAAA,cAAD,CAAb;AACAjB,MAAAA,IAAI,GAAG,KAAP;AACH,KAHI,MAIA;AACDA,MAAAA,IAAI,GAAG,IAAP;AACAE,MAAAA,aAAa;AAChB;AACJ,GAjBD;;AAmBA,QAAMuB,QAAQ,GAAIC,MAAD,IAAY;AACzB,QAAIA,MAAJ,EAAY;AACR,aAAO,OAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ,GAPD;;AASA,QAAMJ,WAAW,GAAG,MAAM;AACtBlB,IAAAA,aAAa,CAAC,CAAC,GAAGL,KAAK,CAACM,OAAV,CAAD,CAAb;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYvB,OAAZ;AACAE,IAAAA,aAAa,CAAC,CAAC,GAAGR,KAAK,CAACS,OAAV,CAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,CAAC,GAAGX,KAAK,CAACY,MAAV,CAAD,CAAZ;AACAE,IAAAA,aAAa,CAAC,CAAC,GAAGd,KAAK,CAACe,OAAV,CAAD,CAAb;AACH,GAND;;AAQA,sBACI;AAAA,4BACI;AAAI,MAAA,KAAK,EAAE;AAACe,QAAAA,KAAK,EAAC9B,KAAK,CAAC8B;AAAb,OAAX;AAAA,gBAAiC9B,KAAK,CAACwB;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKxB,KAAK,CAACmB;AAAX;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKf,UAAU,CAAC2B,GAAX,CAAgBC,MAAD,IAAY;AACxB,UAAIA,MAAM,IAAI,EAAd,EAAkB;AACd;AACH;;AACD,0BAAO,QAAC,OAAD;AAAS,QAAA,MAAM,EAAET,WAAjB;AAA8B,QAAA,MAAM,EAAES,MAAM,CAACL,MAA7C;AAAqD,QAAA,KAAK,EAAED,QAAQ,CAACM,MAAM,CAACL,MAAR,CAApE;AAAqF,QAAA,IAAI,EAAEK,MAAM,CAACR,IAAlG;AAAwG,QAAA,KAAK,EAAExB,KAAK,CAACiC;AAArH;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KALA,CAHL,EAUK1B,UAAU,CAACwB,GAAX,CAAgBd,MAAD,IAAY;AACxB,UAAIA,MAAM,IAAI,EAAd,EAAkB;AACd;AACH;;AACD,0BAAO,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEM,WAAjB;AAA8B,QAAA,MAAM,EAAEN,MAAM,CAACU,MAA7C;AAAqD,QAAA,KAAK,EAAED,QAAQ,CAACT,MAAM,CAACU,MAAR,CAApE;AAAqF,QAAA,IAAI,EAAEV,MAAM,CAACO,IAAlG;AAAwG,QAAA,KAAK,EAAExB,KAAK,CAACkC;AAArH;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KALA,CAVL,EAiBKxB,SAAS,CAACqB,GAAV,CAAeI,KAAD,IAAW;AACtB,UAAIA,KAAK,IAAI,EAAb,EAAiB;AACb;AACH;;AACD,0BAAO,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEZ,WAAjB;AAA8B,QAAA,MAAM,EAAEY,KAAK,CAACR,MAA5C;AAAoD,QAAA,KAAK,EAAED,QAAQ,CAACS,KAAK,CAACR,MAAP,CAAnE;AAAmF,QAAA,IAAI,EAAEQ,KAAK,CAACX,IAA/F;AAAqG,QAAA,KAAK,EAAExB,KAAK,CAACoC;AAAlH;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KALA,CAjBL,EAwBKvB,UAAU,CAACkB,GAAX,CAAgBb,MAAD,IAAY;AACxB,UAAIA,MAAM,IAAI,EAAd,EAAkB;AACd;AACH;;AACD,0BAAO,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEK,WAAjB;AAA8B,QAAA,MAAM,EAAEL,MAAM,CAACS,MAA7C;AAAqD,QAAA,KAAK,EAAED,QAAQ,CAACR,MAAM,CAACS,MAAR,CAApE;AAAqF,QAAA,IAAI,EAAET,MAAM,CAACM,IAAlG;AAAwG,QAAA,KAAK,EAAExB,KAAK,CAACqC;AAArH;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KALA,CAxBL,eA+BI;AAAQ,MAAA,OAAO,EAAErB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ,EAgCKd,UAhCL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH;;GAjFuBH,I;;KAAAA,I","sourcesContent":["import React from 'react'\r\nimport CreateProducts from './CreateProducts';\r\nimport Product from './Product';\r\nimport { useState } from 'react';\r\n\r\nexport default function Room(props) {\r\n    let flag = true;\r\n\r\n    const [addProduct, setAddProduct] = useState()\r\n    const [airConList, setAirConList] = useState([...props.airCons])\r\n    const [heaterList, setHeaterList] = useState([...props.heaters])\r\n    const [lightList, setLightList] = useState([...props.lights])\r\n    const [stereoList, setStereoList] = useState([...props.stereos])\r\n\r\n    const addDirect = () => {\r\n        let heater = false;\r\n        let stereo = <option value=\"stereo\" id=\"stereo\">Stereo</option>;\r\n        if (props.type == \"bathroom\") {\r\n            heater=<option value=\"heater\" id=\"heater\">heater</option>;\r\n        }\r\n        if (props.items == 5) {\r\n            window.alert(\"Reached the limit\")\r\n        }\r\n        else if (flag == true) {\r\n            setAddProduct(<CreateProducts update={updateLists} name={props.name} addDirect={addDirect} addProductsFunc={props.addProductsFunc} items={props.items} heater={heater} stereo={stereo}/>)\r\n            flag = false;\r\n        }\r\n        else {\r\n            flag = true;\r\n            setAddProduct();\r\n        }\r\n    }\r\n\r\n    const colorSet = (status) => {\r\n        if (status) {\r\n            return 'green'\r\n        }\r\n        else {\r\n            return 'red'\r\n        }\r\n    }\r\n\r\n    const updateLists = () => {\r\n        setAirConList([...props.airCons])\r\n        console.log(airCons)\r\n        setHeaterList([...props.heaters])\r\n        setLightList([...props.lights])\r\n        setStereoList([...props.stereos])\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{color:props.color}}>{props.name}</h3>\r\n            <h4>{props.type}</h4>\r\n            {airConList.map((airCon) => {\r\n                if (airCon == '') {\r\n                    return\r\n                }\r\n                return <Product update={updateLists} status={airCon.status} color={colorSet(airCon.status)} name={airCon.name} power={props.airConPower}/>\r\n            })\r\n            }\r\n            {heaterList.map((heater) => {\r\n                if (heater == '') {\r\n                    return\r\n                }\r\n                return <Product update={updateLists} status={heater.status} color={colorSet(heater.status)} name={heater.name} power={props.heaterPower}/>\r\n            })\r\n            }\r\n            {lightList.map((light) => {\r\n                if (light == '') {\r\n                    return\r\n                }\r\n                return <Product update={updateLists} status={light.status} color={colorSet(light.status)} name={light.name} power={props.lightPower}/>\r\n            })\r\n            }\r\n            {stereoList.map((stereo) => {\r\n                if (stereo == '') {\r\n                    return\r\n                }\r\n                return <Product update={updateLists} status={stereo.status} color={colorSet(stereo.status)} name={stereo.name} power={props.stereoPower}/>\r\n            })\r\n            }\r\n            <button onClick={addDirect}>+</button>\r\n            {addProduct}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}