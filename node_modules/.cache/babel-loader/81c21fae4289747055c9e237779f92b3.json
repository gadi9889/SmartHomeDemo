{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gadi\\\\Desktop\\\\React\\\\smarthome\\\\src\\\\components\\\\Room.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport CreateProducts from './CreateProducts';\nimport Product from './Product';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Room(props) {\n  _s();\n\n  let flag = true;\n  const [addProduct, setAddProduct] = useState();\n  const [airConList, setAirConList] = useState([...props.airCons]);\n  const [heaterList, setHeaterList] = useState([...props.heaters]);\n  const [lightList, setLightList] = useState([...props.lights]);\n  const [stereoList, setStereoList] = useState([...props.stereos]); // const productRender = (productList,productRenderList,power) => {\n  //     let i = 0;\n  //     productList.map = (product) => {\n  //         productRenderList[i] = <Product status={product.status} name={Product.name} power={power}/>\n  //         i++;\n  //         return\n  //     }\n  // }\n\n  const colorSet = status => {\n    if (status) {\n      return 'green';\n    } else {\n      return 'red';\n    }\n  };\n\n  const airConRender = () => {\n    let color;\n\n    props.airCon.map = airCon => {\n      color = colorSet(airCon.status);\n      setAirConList( /*#__PURE__*/_jsxDEV(Product, {\n        color: color,\n        name: airCon.name,\n        power: props.airConPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this));\n      return;\n    };\n  };\n\n  const heaterRender = () => {\n    let color;\n\n    props.heater.map = heater => {\n      color = colorSet(heater.status);\n      setHeaterList( /*#__PURE__*/_jsxDEV(Product, {\n        color: color,\n        name: heater.name,\n        power: props.heaterPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this));\n      return;\n    };\n  };\n\n  const lightRender = () => {\n    let color;\n\n    props.light.map = light => {\n      color = colorSet(light.status);\n      setLightList( /*#__PURE__*/_jsxDEV(Product, {\n        color: color,\n        name: light.name,\n        power: props.lightPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this));\n      return;\n    };\n  };\n\n  const stereoRender = () => {\n    let color;\n\n    props.stereo.map = stereo => {\n      color = colorSet(stereo.status);\n      setStereoList( /*#__PURE__*/_jsxDEV(Product, {\n        color: color,\n        name: stereo.name,\n        power: props.stereoPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this));\n      return;\n    };\n  };\n\n  const addDirect = () => {\n    let heater = false;\n\n    let stereo = /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"stereo\",\n      id: \"stereo\",\n      children: \"Stereo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }, this);\n\n    if (props.type == \"bathroom\") {\n      heater = /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"heater\",\n        id: \"heater\",\n        children: \"heater\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (props.items == 5) {\n      window.alert(\"Reached the limit\");\n    } else if (flag == true) {\n      setAddProduct( /*#__PURE__*/_jsxDEV(CreateProducts, {\n        name: props.name,\n        addDirect: addDirect,\n        addProductsFunc: props.addProductsFunc,\n        items: props.items,\n        heater: heater,\n        stereo: stereo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this));\n      flag = false;\n    } else {\n      flag = true;\n      setAddProduct();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: props.color\n      },\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), airConList.map(airCon => {\n      if (airCon == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: airCon.status,\n        name: airCon.name,\n        power: props.airConPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 24\n      }, this);\n    }), heaterList.map(heater => {\n      if (heater == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: heater.status,\n        name: heater.name,\n        power: props.heaterPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 24\n      }, this);\n    }), lightList.map(light => {\n      if (light == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: light.status,\n        name: light.name,\n        power: props.lightPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 24\n      }, this);\n    }), stereolist.map(stereo => {\n      if (stereo == '') {\n        return;\n      }\n\n      return /*#__PURE__*/_jsxDEV(Product, {\n        status: stereo.status,\n        name: stereo.name,\n        power: props.stereoPower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDirect,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), addProduct]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"iFozzvqZMeeA5iui8X6EqhHZbl8=\");\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Gadi/Desktop/React/smarthome/src/components/Room.jsx"],"names":["React","CreateProducts","Product","useState","Room","props","flag","addProduct","setAddProduct","airConList","setAirConList","airCons","heaterList","setHeaterList","heaters","lightList","setLightList","lights","stereoList","setStereoList","stereos","colorSet","status","airConRender","color","airCon","map","name","airConPower","heaterRender","heater","heaterPower","lightRender","light","lightPower","stereoRender","stereo","stereoPower","addDirect","type","items","window","alert","addProductsFunc","stereolist"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport CreateProducts from './CreateProducts';\r\nimport Product from './Product';\r\nimport { useState } from 'react';\r\n\r\nexport default function Room(props) {\r\n    let flag = true;\r\n\r\n    const [addProduct, setAddProduct] = useState()\r\n    const [airConList, setAirConList] = useState([...props.airCons])\r\n    const [heaterList, setHeaterList] = useState([...props.heaters])\r\n    const [lightList, setLightList] = useState([...props.lights])\r\n    const [stereoList, setStereoList] = useState([...props.stereos])\r\n\r\n    // const productRender = (productList,productRenderList,power) => {\r\n    //     let i = 0;\r\n    //     productList.map = (product) => {\r\n    //         productRenderList[i] = <Product status={product.status} name={Product.name} power={power}/>\r\n    //         i++;\r\n    //         return\r\n    //     }\r\n    // }\r\n    const colorSet = (status) => {\r\n        if (status) {\r\n            return 'green'\r\n        }\r\n        else {\r\n            return 'red'\r\n        }\r\n    }\r\n    const airConRender = () => {\r\n        let color;\r\n        props.airCon.map = (airCon) => {\r\n            color = colorSet(airCon.status)\r\n            setAirConList(\r\n                <Product color={color} name={airCon.name} power={props.airConPower}/>\r\n            )\r\n            return\r\n        }\r\n    }\r\n    const heaterRender = () => {\r\n        let color;\r\n        props.heater.map = (heater) => {\r\n            color = colorSet(heater.status)\r\n            setHeaterList(\r\n                <Product color={color} name={heater.name} power={props.heaterPower}/>\r\n            )\r\n            return\r\n        }\r\n    }\r\n    const lightRender = () => {\r\n        let color;\r\n        props.light.map = (light) => {\r\n            color = colorSet(light.status)\r\n            setLightList(\r\n                <Product color={color} name={light.name} power={props.lightPower}/>\r\n            )\r\n            return\r\n        }\r\n    }\r\n    const stereoRender = () => {\r\n        let color;\r\n        props.stereo.map = (stereo) => {\r\n            color = colorSet(stereo.status)\r\n            setStereoList(\r\n                <Product color={color} name={stereo.name} power={props.stereoPower}/>\r\n            )\r\n            return\r\n        }\r\n    }\r\n\r\n    const addDirect = () => {\r\n        let heater = false;\r\n        let stereo = <option value=\"stereo\" id=\"stereo\">Stereo</option>;\r\n        if (props.type == \"bathroom\") {\r\n            heater=<option value=\"heater\" id=\"heater\">heater</option>;\r\n        }\r\n        if (props.items == 5) {\r\n            window.alert(\"Reached the limit\")\r\n        }\r\n        else if (flag == true) {\r\n            setAddProduct(<CreateProducts name={props.name} addDirect={addDirect} addProductsFunc={props.addProductsFunc} items={props.items} heater={heater} stereo={stereo}/>)\r\n            flag = false;\r\n        }\r\n        else {\r\n            flag = true;\r\n            setAddProduct();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3 style={{color:props.color}}>{props.name}</h3>\r\n            <h4>{props.type}</h4>\r\n            {airConList.map((airCon) => {\r\n                if (airCon == '') {\r\n                    return\r\n                }\r\n                return <Product status={airCon.status} name={airCon.name} power={props.airConPower}/>\r\n            })\r\n            }\r\n            {heaterList.map((heater) => {\r\n                if (heater == '') {\r\n                    return\r\n                }\r\n                return <Product status={heater.status} name={heater.name} power={props.heaterPower}/>\r\n            })\r\n            }\r\n            {lightList.map((light) => {\r\n                if (light == '') {\r\n                    return\r\n                }\r\n                return <Product status={light.status} name={light.name} power={props.lightPower}/>\r\n            })\r\n            }\r\n            {stereolist.map((stereo) => {\r\n                if (stereo == '') {\r\n                    return\r\n                }\r\n                return <Product status={stereo.status} name={stereo.name} power={props.stereoPower}/>\r\n            })\r\n            }\r\n            <button onClick={addDirect}>+</button>\r\n            {addProduct}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}